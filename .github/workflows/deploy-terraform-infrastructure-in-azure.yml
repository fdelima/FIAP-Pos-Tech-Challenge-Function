name: Terraform In Azure with User-assigned Managed Identity 

on:
  pull_request: 
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read    

jobs:
  deploy-terraform-infrastructure-in-azure:
    runs-on: self-hosted    

    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
        
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Find and Replace
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: "{{ secrets.AZURE_SUBSCRIPTION_ID }}"
          replace: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          include: |
            ./Src/Azure/Infra/main.tf
          
      - name: List files in the ./Src/Azure/Infra
        working-directory: ./Src/Azure/Infra
        run: |
            ls
        
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        working-directory: ./Src/Azure/Infra
        run: terraform init
        
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        working-directory: ./Src/Azure/Infra
        run: terraform plan -input=false
  
        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        working-directory: ./Src/Azure/Infra
        run: |
            if [ $(az group exists --name 'fiap-pos-tech-function-rg') = false ]; then 
              terraform apply -auto-approve #-input=false        
            fi
